1. Установите из сетевого репозитория пакеты, входящие в группу «Developments Tools».

sudo yum group install "Development Tools"

2. Установите из исходных кодов, приложенных к методическим указаниям пакет bastet-0.43. Для этого
необходимо создать отдельный каталог и скопировать в него исходные коды проекта bastet. Вы
можете использовать подключение сетевого каталога в хостовой операционной системе для передачи
архива с исходными кодами в виртуальную машину. Далее следует распаковать архив до появления
каталога с исходными файлами (в каталоге должен отображаться Makefile). После этого соберите
пакет bastet и запустите его, чтобы удостовериться, что он правильно собрался. Затем модифицируйте
Makefile, добавив в него раздел install. Обеспечьте при установке копирование исполняемого файла в
/usr/bin с установкой соответствующих прав доступа. Выполните установку и проверьте, что любой
пользователь может запустить установленный пакет.

tar -xvf bastet-0.43.tar -C /archive
yum install boost
yum install boost-devel
yum install ncurses-devel
make
bastet

nano Makefile
>>
install:
	cp bastet /usr/bin
	chmod -R 777 /usr/bin/
	echo "Hello, Slava!"
>>

3. Создайте файл task3.log, в который выведите список всех установленных пакетов.

rpm -qa > task3.log

4. Создайте файл task4_1.log, в который выведите список всех пакетов (зависимостей), необходимых
для установки и работы компилятора gcc. Создайте файл task4_2.log, в который выведите список
всех пакетов (зависимостей), установка которых требует установленного пакета libgcc.

rpm -q --requires gcc > task4_1.log
rpm -q --whatrequires libgcc > task4_2.log

5. Создайте каталог localrepo в домашнем каталоге пользователя root и скопируйте в него пакет
checkinstall-1.6.2-3.el6.1.x86_64.rpm , приложенный к методическим указаниям. Создайте
собственный локальный репозиторий с именем localrepo из получившегося каталога с пакетом.

mkdir localrepo
cp checkinstall-1.6.2-3.el6.1.x86_64.rpm localrepo
cd localrepo
yum install createrepo
createrepo /root/localrepo
ls /root/localrepo
touch /etc/yum.repos.d/localrepo.repo
nano /etc/yum.repos.d/localrepo.repo
>>
[localrepo]
name=localrepo
baseurl=file:///root/localrepo
enabled=1
gpgcheck=0
>>

6. Создайте файл task6.log, в который выведите список всех доступных репозиториев.

dnf repolist > task6.log

7. Настройте систему на работу только с созданным локальным репозиторием (достаточно переименовать
конфигурационные файлы других репозиториев). Выведите на экран список доступных для установки
пакетов и убедитесь, что доступен только один пакет, находящийся в локальном репозитории. Установите
этот пакет.

touch script.sh
nano script.sh
>>
for file in $(ls /etc/yum.repos.d)
do
	if [[ $file != 'localrepo.repo' ]]; then
	sed -i 's/enabled=1/enabled=0/g' /etc/yum.repos.d/$file
	fi
done
>>
./script.sh
dnf list available - убеждаемся, что только один пакет enabled
yum install \* - загружаем пакет


8. Скопируйте в домашний каталог пакет fortunes-ru_1.52-2_all, приложенный к методическим
рекомендациям, преобразуйте его в rpm пакет и установите.

cp fortunes-ru_1.52-2_all.deb /root
yum install alien
alien -r /root/fortunes-ru_1.52-2_all.deb
rpm -i --force fortunes-ru_1.52-3.noarch.rpmdnf l - устанавливаем пакет
dnf list installed | grep "fortunes" - проверяем, что все установилось

9. Скачайте из сетевого репозитория пакет nano. Пересоберите пакет таким образом, чтобы после его
установки менеджером пакетов, появлялась возможность запустить редактор nano из любого каталога,
введя команду newnano.

dnf install wget
wget http://mirror.ghettoforge.org/distributions/gf/el/7/plus/x86_64/nano-2.7.4-3.gf.el7.x86_64.rpm - скачали rpm пакет nano
ls - проверяем, что все скачалось
dnf remove nano - удаляем старый nano
dnf install nano-2.7.4-3.gf.el7.x86_64.rpm
nano - проверяем, что nano работает
mv /usr/bin/nano /usr/bin/newnano
newnano - проверяем, что newnano работает
